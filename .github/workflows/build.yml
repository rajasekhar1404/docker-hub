name: CI/CD Pipeline
on:
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  tests:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: '17'
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Run Tests
        run: mvn -B test

  build_and_push:
    name: Build & Push to DockerHub
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Docker Build and Push to DockerHub
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: rajasekhar1404/krs-docker-demo:latest

  deploy:
    name: Deploy to AWS EC2
    needs: build_and_push
    runs-on: ubuntu-latest
    steps:
      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli

      - name: Configure AWS credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region ${{ secrets.AWS_DEFAULT_REGION }}

      - name: SSH into EC2 instance
        uses: appleboy/ssh-action@master
        with:
          host: 3.84.220.235
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Pull the latest Docker image
            docker pull rajasekhar1404/krs-docker-demo:latest

            # Stop and remove the existing container (if any)
            docker stop my-container || true
            docker rm my-container || true

            # Run the Docker container
            docker run -d --name my-container -p 80:8080 rajasekhar1404/krs-docker-demo:latest
